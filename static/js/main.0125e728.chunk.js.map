{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","countPage","Math","ceil","pages","Array","fill","map","_","i","isPrevDisabled","isNextDisabled","className","classNames","disabled","href","onClick","page","active","getNumbers","from","to","numbers","n","push","App","useState","setCurrentPage","countItemsPerPage","setCountItemsPerPage","fromPage","toPage","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"0MASaA,EAAa,SAAC,GAEb,IADZC,EACW,EADXA,MAAOC,EACI,EADJA,QAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,aAEvBC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQ,IAAIC,MAAMJ,GAAWK,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KACvDC,EAAiC,IAAhBX,EACjBY,EAAiBZ,IAAgBE,EAEvC,OACE,qBAAIW,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUJ,IAHhB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAI,WAAMX,EAAML,EAAc,IAC9B,gBAAeW,EACfM,QAAS,kBAAMhB,EAAaD,EAAc,IAL5C,oBAUDK,EAAMG,KAAI,SAAAU,GAAI,OACb,oBAEEL,UAAWC,IACT,YACA,CAAEK,OAAQnB,IAAgBkB,IAJ9B,SAOE,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMhB,EAAaiB,IAJ9B,SAMGA,KAZEA,MAgBT,oBACEL,UAAWC,IACT,YACA,CAAEC,SAAUH,IAHhB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMX,EAAML,EAAc,IAC9B,gBAAeY,EACfK,QAAS,kBAAMhB,EAAaD,EAAc,IAL5C,wB,MC3DD,SAASoB,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECFT,IAEaG,EAAM,WACjB,MAAsCC,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB4B,EAApB,KACA,EAAkDD,mBAAS,GAA3D,mBAAOE,EAAP,KAA0BC,EAA1B,KAOMC,EAAW,GAAK/B,EAAc,GAAK6B,EACnCG,EAAShC,IAAgBG,KAAKC,KAZnB,GAYqCyB,GAZrC,GAcb7B,EAAc6B,EAElB,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQb,EAAR,sBACa+B,EADb,iBAEQC,GAFR,cArBU,GAqBV,OAMH,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOL,EACPM,SA5BwB,SAACC,GACjCN,GAAsBM,EAAMC,OAAOH,OACnCN,EAAe,IAqBT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAjDW,GAkDXC,QAAS8B,EACT7B,YAAaA,EACbC,aAAc2B,IAGhB,6BACGR,EAAWW,EAAUC,GAAQxB,KAAI,SAAAgB,GAAC,OACjC,oBAAY,UAAQ,OAApB,wBAAoCA,IAA3BA,YC3DnBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0125e728.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination = ({\n  total, perPage, currentPage, onPageChange,\n}: Props) => {\n  const countPage = Math.ceil(total / perPage);\n  const pages = new Array(countPage).fill(0).map((_, i) => i + 1);\n  const isPrevDisabled = currentPage === 1;\n  const isNextDisabled = currentPage === countPage;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isPrevDisabled },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${pages[currentPage - 1]}`}\n          aria-disabled={isPrevDisabled}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isNextDisabled },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${pages[currentPage + 1]}`}\n          aria-disabled={isNextDisabled}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { ChangeEvent, useState } from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nconst countItems = 42;\n\nexport const App = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countItemsPerPage, setCountItemsPerPage] = useState(3);\n\n  const handlerChangeCountPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCountItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const fromPage = 1 + (currentPage - 1) * countItemsPerPage;\n  const toPage = currentPage === Math.ceil(countItems / countItemsPerPage)\n    ? countItems\n    : currentPage * countItemsPerPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `\n          + `(items ${fromPage} `\n          + `- ${toPage}`\n          + ` of ${countItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countItemsPerPage}\n            onChange={handlerChangeCountPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={countItems}\n        perPage={countItemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {getNumbers(fromPage, toPage).map(n => (\n          <li key={n} data-cy=\"item\">{`Item ${n}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}